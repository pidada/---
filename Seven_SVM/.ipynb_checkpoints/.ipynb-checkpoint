{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## SVM支持向量机\n",
    "### 简介\n",
    "SVM(support vector machine)是一种二分类模型，它的基本模型是定义在特征空间上的间隔最大的线性分类器，间隔最大使其区别于感知机，感知机只是找到一个分离超平面。\n",
    "- SVM是非线性分类器\n",
    "- 学习策略：间隔最大化，等价于求解凸二次规划问题或者说正则化的合页损失函数的最小化问题\n",
    "- 学习算法：求解凸二次规划的最优化算法\n",
    "\n",
    "### 分类\n",
    "- 线性可分支持向量机\n",
    "- 线性支持向量机\n",
    "- 非线性支持向量机\n",
    "\n",
    ">当训练数据线性可分，通过间隔最大化，学习到一个线性可分支持向量机：硬间隔支持向量机；数据近似线性可分，得到线性支持向量机；当数据线性不可分时，得到非线性支持向量机。\n",
    "\n",
    "\n",
    "### 线性可分支持向量机\n",
    "#### 思想\n",
    "- 学习目标：在特征空间中找到一个分离超平面S，由$w \\bullet x+b=0 $决定，将实例分成不同的正类和负类\n",
    "- $w$是法向量，$b$是截距。法向量指向的那侧是正类，另一侧是负类\n",
    "- 通过间隔最大化求出的分离超平面具有唯一性\n",
    "\n",
    "#### 定义线性可分支持向量机\n",
    "- 分离超平面$$w^* \\bullet x+b^* =0 $$\n",
    "- 分类决策函数$$f(x)=sign(w^* \\bullet x+b^* )$$\n",
    "  - 到决策函数的距离大于1，表示正类\n",
    "  - 到决策函数的距离小于1，表示负类\n",
    "  \n",
    "#### 函数间隔和几何间隔\n",
    ">一个点到分离超平面的距离可以表示分类预测的确信程度。通常使用$|w \\bullet x+b|$来表示点x到超平面的远近\n",
    "- $w \\bullet x+b > 0，y = +1$或者$w \\bullet x+b < 0，y = -1$都表示将将数据正确分类：即$w \\bullet x+b$和类标记$y$的符号是一致的\n",
    "- 在给定数据集T，超平面$(w,b)$关于样本点$(x_i,y_i)$的**函数间隔**：$$\\hat \\gamma_i=y_i(w \\bullet x_i+b)$$定义：超平面$(w,b)$关于训练数据集T的函数间隔，为所有T中样本点的函数间隔的最小值：$$\\hat \\gamma=\\mathop {\\min}\\limits_{i=1,2,...,N} \\hat \\gamma_i$$\n",
    "\n",
    ">函数间隔表示分类预测的准确性和确信度。当$w,b$成比例的变化时，超平面并没有变化，因此需要规范化，加上$||w||$，此时变成了**几何间隔**。\n",
    "\n",
    "$$几何间隔=\\frac {函数间隔} {||w||}$$\n",
    "\n",
    "#### 点到超平面的距离\n",
    "\n",
    "设样本点A到超平面$(w,b)$的距离为$\\gamma_i$\n",
    "- 如果点在超平面正的一侧，即：$y_i = +1$，距离为：$$\\gamma_i=\\frac {w \\bullet x_i+b} {||w||}$$\n",
    "- 如果点在超平面负的一侧，即：$y_i = -1$，距离为：$$\\gamma_i=-(\\frac {w \\bullet x_i+b} {||w||})$$\n",
    "\n",
    "统一地：当样本点被超平面正确分类时，点到超平面的距离为$$\\gamma_i=y_i(\\frac {w \\bullet x_i+b} {||w||})$$那么，当$||w||=1$时候，函数间隔和几何间隔是相等的。\n",
    "\n",
    ">如果$w,b$等比例的变化，函数间隔相应的变化，但是几何间隔是不变的\n",
    "\n",
    "#### 间隔最大化\n",
    ">支持向量机学习的基本思想是求解能够正确划分训练数据集并且几何间隔最大的分离超平面。几何间隔最大的分离超平面是唯一的。这里的间隔最大化称之为`硬间隔最大化`。\n",
    "\n",
    "硬间隔最大化不仅能够将正负实例点分开，还能将最难分的实例点（距离超平面最近的点）也能分开，对应的模型为$$\\mathop {\\max} \\limits_{w,b}\\gamma$$$$s.t. \\qquad y_i({w \\bullet x_i+b}{||w||}) \\geq {\\gamma}$$意思：\n",
    "- 最大化几何间隔\n",
    "- 约束条件表示的是超平面关于每个训练样本点的距离至少是$\\gamma$\n",
    "\n",
    "根据函数间隔和几何间隔的关系${\\gamma}=\\frac {\\hat \\gamma}{||w||}$，模型还可以表示为：$$\\mathop {\\max} \\limits_{w,b}\\frac {\\hat \\gamma}{||w||}$$$$s.t. \\qquad y_i(w \\bullet x_i+b) \\geq {\\hat \\gamma}$$\n",
    "\n",
    "函数间隔不影响模型，就取$\\hat \\gamma=1$，那么最小化$\\frac {1}{||w||}$和最小化$\\frac{1}{2}||w||^2$等价（$\\frac{1}{2}$方便求导）\n",
    "\n",
    ">线性可分支持向量机的最优化问题可以表示为**凸二次优化问题：**\n",
    "\n",
    "最小化法向量：$$\\mathop \\min \\limits_{w,b}\\frac{1}{2} ||w||^2$$\n",
    "\n",
    "约束条件：$$s.t. \\qquad y_i(w \\bullet x_i+b) \\geq 0,i=1,2,...,N$$求解出上述两个的式子的解$w^*,b^*$就可以求出分离超平面$w^* \\bullet x+b^*$和决策函数$f(x)=sign(w^* \\bullet x+b^*)$\n",
    "\n",
    "#### 最大间隔分离超平面的存在唯一性\n",
    "定理7.1中证明了存在唯一性\n",
    "- 存在性\n",
    "- 唯一性：反证法\n",
    "#### 支持向量和决策边界\n",
    "- 支持向量：训练样本中的点距离超平面最近的点的实例\n",
    "- 决策边界：与超平面平行，且刚好有实例落在上面的平面，$H1,H2$\n",
    "\n",
    "#### 对偶问题\n",
    "将线性可分支持向量机的最优化问题，通过拉格朗日对偶性，转换成求解对偶问题，得到对偶问题的最优解\n",
    "- 对偶问题更好求解\n",
    "- 自然引入核函数，推广到非线性支持向量机\n",
    "\n",
    "**如何构建对偶形式：**\n",
    "- 引入拉格朗日乘子$alpha_i \\geq 0, i=1,2,3...,N$，构建拉格朗日函数：$$L(w,b,\\alpha)=\\frac{1}{2}||w||^2 - \\sum^N_{i=1}\\alpha_iy_i(w \\bullet x_i+b)+\\sum ^N_{i=1}\\alpha_i$$其中$\\alpha=(\\alpha_1,\\alpha_2,...,\\alpha_N)^T$为拉格朗日乘子向量\n",
    "- 原始问题的对偶问题是极大极小问题$$\\mathop \\max \\limits_a \\mathop \\min \\limits_{b,\\alpha} L(w,b,\\alpha)$$\n",
    "- $L$先对$w,b$求解极小，再对$\\alpha$求解极大值\n",
    "- 具体过程见$P_{120}-P_{123}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  },
  "latex_envs": {
   "LaTeX_envs_menu_present": true,
   "autoclose": false,
   "autocomplete": true,
   "bibliofile": "biblio.bib",
   "cite_by": "apalike",
   "current_citInitial": 1,
   "eqLabelWithNumbers": true,
   "eqNumInitial": 1,
   "hotkeys": {
    "equation": "Ctrl-E",
    "itemize": "Ctrl-I"
   },
   "labels_anchors": false,
   "latex_user_defs": false,
   "report_style_numbering": false,
   "user_envs_cfg": false
  },
  "nbTranslate": {
   "displayLangs": [
    "*"
   ],
   "hotkey": "alt-t",
   "langInMainMenu": true,
   "sourceLang": "en",
   "targetLang": "fr",
   "useGoogleTranslate": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
